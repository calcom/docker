# Default values for calendso-chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:

 repository: #your calendso docker image repo
 pullPolicy: IfNotPresent
 tag: ""
imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

environment:
  NEXT_PUBLIC_LICENSE_CONSENT: "agree"

  DATABASE_URL: 'postgresql://<user>:<pass>@<db-host>:<db-port>/<db-name>'
  
  GOOGLE_API_CREDENTIALS: #your Google api credentials
  JWT_SECRET: 'secret'
  
  # Remove this var if you don't want Cal to collect anonymous usage
  NEXT_PUBLIC_TELEMETRY_KEY: js.2pvs2bbpqq1zxna97wcml.oi2jzirnbj1ev4tc57c5r

  # Used for the Office 365 / Outlook.com Calendar integration
  MS_GRAPH_CLIENT_ID: 
  MS_GRAPH_CLIENT_SECRET: 

  # Used for the Zoom integration
  ZOOM_CLIENT_ID:
  ZOOM_CLIENT_SECRET:

  #Used for the Daily integration
  DAILY_API_KEY:

  # E-mail settings

  # Cal uses nodemailer (@see https://nodemailer.com/about/) to provide email sending. As such we are trying to
  # allow access to the nodemailer transports from the .env file. E-mail templates are accessible within lib/emails/

  # Configures the global From: header whilst sending emails.
  EMAIL_FROM: 'notifications@yourselfhostedcal.com'

  # Configure SMTP settings (@see https://nodemailer.com/smtp/).
  # Note: The below configuration for Office 365 has been verified to work.
  EMAIL_SERVER_HOST: "smtp.office365.com"
  EMAIL_SERVER_PORT: "'587'"
  EMAIL_SERVER_USER: "email@adress.com"
  # Keep in mind that if you have 2FA enabled, you will need to provision an App Password.
  EMAIL_SERVER_PASSWORD: "secret_passwprd"
  # ApiKey for cronjobs
  CRON_API_KEY: "0cc0e6c35519bba620c9360cfe3e68d0"

  # Stripe Config
  # NEXT_PUBLIC_STRIPE_PUBLIC_KEY: # pk_test_...
  # STRIPE_PRIVATE_KEY: # sk_test_...
  # STRIPE_CLIENT_ID: # ca_...
  # STRIPE_WEBHOOK_SECRET: # whsec_...
  # PAYMENT_FEE_PERCENTAGE: 0.005 # Take 0.5% commission
  # PAYMENT_FEE_FIXED: 10 # Take 10 additional cents commission

  # # Application Key for symmetric encryption and decryption
  # # must be 32 bytes for AES256 encryption algorithm
  # CALENDSO_ENCRYPTION_KEY: 

  # # Intercom Config
  # NEXT_PUBLIC_INTERCOM_APP_ID:

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext:
  allowPrivilegeEscalation: false
  runAsUser: 0
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 3000

ingress:
  enabled: true
  className: ""
  annotations:
    traefik.ingress.kubernetes.io/router.tls: "true"
    # kubernetes.io/ingress.class: nginx
    kubernetes.io/tls-acme: "true"
  hosts:
    - host: cal.yourhost.com
      paths:
      - path: /
        pathType: ImplementationSpecific
        backend:
          serviceName: calendso
          servicePort: 3000
  tls: 
    - secretName: calendso-cert
      hosts:
        - cal.yourhost.com

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
