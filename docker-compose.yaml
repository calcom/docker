# Use postgres/example user/password credentials
version: '3.9'

volumes:
  database-data:

networks:
  stack:
    external: false

services:
  database:
    image: postgres
    # profiles: ["withpostgres"] only starts when specifying this profile
    container_name: calendso-db
    restart: unless-stopped
    volumes:
      - database-data:/var/lib/postgresql/data/
    env_file: .env
    networks:
      - calendso-stack

  calendso:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - BASE_URL=${BASE_URL}
        - NEXT_PUBLIC_APP_URL=${NEXT_PUBLIC_APP_URL}
        - NEXT_PUBLIC_LICENSE_CONSENT=${NEXT_PUBLIC_LICENSE_CONSENT}
        - NEXT_PUBLIC_TELEMETRY_KEY=${NEXT_PUBLIC_TELEMETRY_KEY}
    image: calendso/calendso:latest
    container_name: calendso
    restart: unless-stopped
    networks:
      - calendso-stack
    ports:
      - 3000:3000
    env_file: .env
    environment:
      - DATABASE_URL=${DATABASE_URL}
    depends_on:
      - database # comment out when using non-docker database (=enabled "withpostgres" profile)

# Optional use of Prisma Studio. To use *with* Prisma Studio: 
# docker-compose --profile withstudio up
  studio:
    image: calendso/calendso:latest
    container_name: calendso-studio
    restart: unless-stopped
    profiles: ["withstudio"] # only starts when specifying this profile
    networks:
      - calendso-stack
    ports:
      - 5555:5555
    env_file: .env
    environment:
      - DATABASE_URL=${DATABASE_URL}
    depends_on:
      - database # comment out when using non-docker database (=enabled "withpostgres" profile)
    command:
      - npx
      - prisma
      - studio
