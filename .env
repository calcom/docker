# Set this value to 'agree' to accept our license: 
# LICENSE: https://github.com/calendso/calendso/blob/main/LICENSE
#
# Summary of terms:
# - The codebase has to stay open source, whether it was modified or not
# - You can not repackage or sell the codebase
# - Acquire a commercial license to remove these terms by emailing: license@cal.com
NEXT_PUBLIC_LICENSE_CONSENT=${{ secrets.NEXT_PUBLIC_LICENSE_CONSENT }}

NODE_ENV=development

# DATABASE_URL='postgresql://<user>:<pass>@<db-host>:<db-port>/<db-name>'
# DATABASE_URL=postgresql://postgres:@localhost:5432/calendso?schema=public

# DATABASE_URL=postgresql://postgres:@db:5432/calendso?schema=public
POSTGRES_USER= ${{ secrets.POSTGRES_USER }}
POSTGRES_PASSWORD= ${{ secrets.POSTGRES_PASSWORD }}
POSTGRES_DB= ${{ secrets.POSTGRES_DB }}
DATABASE_HOST= ${{ secrets.DATABASE_HOST }}
DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}/${POSTGRES_DB}

GOOGLE_API_CREDENTIALS=${{ secrets.GOOGLE_API_CREDENTIALS }}

# @see: https://github.com/calendso/calendso/issues/263
# Required for Vercel hosting - set NEXTAUTH_URL to equal your BASE_URL

BASE_URL= ${{ secrets.BASE_URL }}
NEXT_PUBLIC_APP_URL=${{ secrets.BASE_URL }}

JWT_SECRET=${{ secrets.JWT_SECRET }}
JWT_SINGING_PRIVATE_KEY = ${{secrets.JWT_SIGNING_PRIVATE_KEY}}

# @see: https://github.com/calendso/calendso/issues/263
# Required for Vercel hosting - set NEXTAUTH_URL to equal your BASE_URL
NEXTAUTH_URL=${{ secrets.BASE_URL }}

# Remove this var if you don't want Cal to collect anonymous usage
NEXT_PUBLIC_TELEMETRY_KEY=js.2pvs2bbpqq1zxna97wcml.oi2jzirnbj1ev4tc57c5r

# Used for the Office 365 / Outlook.com Calendar integration
MS_GRAPH_CLIENT_ID=${{ secrets.MS_GRAPH_CLIENT_ID }}
MS_GRAPH_CLIENT_SECRET=${{ secrets.MS_GRAPH_CLIENT_SECRET }}

# Used for the Zoom integration
ZOOM_CLIENT_ID= ${{ secrets.ZOOM_CLIENT_ID }}
ZOOM_CLIENT_SECRET= ${{ secrets.ZOOM_CLIENT_SECRET }}

#Used for the Daily integration
DAILY_API_KEY= ${{ secrets.DAILY_API_KEY }}

# E-mail settings

# Cal uses nodemailer (@see https://nodemailer.com/about/) to provide email sending. As such we are trying to
# allow access to the nodemailer transports from the .env file. E-mail templates are accessible within lib/emails/

# Configures the global From: header whilst sending emails.
EMAIL_FROM= ${{ secrets.EMAIL_FROM }}

# Configure SMTP settings (@see https://nodemailer.com/smtp/).
# Note: The below configuration for Office 365 has been verified to work.
EMAIL_SERVER_HOST= ${{ secrets.EMAIL_SERVER_HOST }}
EMAIL_SERVER_PORT=${{ secrets.EMAIL_SERVER_PORT }}
EMAIL_SERVER_USER= ${{ secrets.EMAIL_SERVER_USER }}
# Keep in mind that if you have 2FA enabled, you will need to provision an App Password.
EMAIL_SERVER_PASSWORD= ${{ secrets.EMAIL_SERVER_PASSWORD }}
# ApiKey for cronjobs
CRON_API_KEY=0cc0e6c35519bba620c9360cfe3e68d0

# Stripe Config
NEXT_PUBLIC_STRIPE_PUBLIC_KEY=
STRIPE_PRIVATE_KEY=
STRIPE_CLIENT_ID=
STRIPE_WEBHOOK_SECRET=
PAYMENT_FEE_PERCENTAGE=0.005 # Take 0.5% commission
PAYMENT_FEE_FIXED=10 # Take 10 additional cents commission

# Application Key for symmetric encryption and decryption
# must be 32 bytes for AES256 encryption algorithm
CALENDSO_ENCRYPTION_KEY= ${{ secrets.CALENDSO_ENCRYPTION_KEY }}

# Intercom Config
NEXT_PUBLIC_INTERCOM_APP_ID= ${{ secrets.NEXT_PUBLIC_INTERCOM_APP_ID }}
